plugins {
    id 'org.springframework.boot' version '2.7.0-RC1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id("com.google.osdetector") version "1.7.0"
}

group = 'de.danielkoellgen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.2'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.2'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.lmax:disruptor:3.4.4'
    implementation 'mysql:mysql-connector-java:8.0.29'
//    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.javatuples:javatuples:1.2'
    if (osdetector.arch.equals("aarch_64")) {
        implementation 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64'
    }

//    runtimeOnly 'io.zipkin.brave:brave-instrumentation-mysql8:5.13.9'
    runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json:2.17.2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'dev'
}

jib {
    to {
        image = 'dadepu/srscs_prod_test:0.1.3'
        auth {
            username = System.getenv('USER_A') ?: ''
            password = System.getenv('PASS_A') ?: ''
        }
    }
    container {
        appRoot = '/prodtestService'
        ports = ['9004']
        workingDirectory = '/prodtestService'
    }
}